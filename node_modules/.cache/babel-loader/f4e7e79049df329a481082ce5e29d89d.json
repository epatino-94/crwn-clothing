{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/edgarpatino/Desktop/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAIA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAMP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAqBC,QAArB,KAAiCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAjF,EAA0F,CAA1F,CAFiC,CAA3C;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAqBC,QAArB,KAAiCD,mBAAmB,GAAIC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAAtG,EAA4G,CAA5G,CAF4B,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\n\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n);\n\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumalatedQuantity,cartItem)=> accumalatedQuantity + cartItem.quantity,0)\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumalatedQuantity,cartItem)=> accumalatedQuantity  + cartItem.quantity * cartItem.price,0)\n)"]},"metadata":{},"sourceType":"module"}