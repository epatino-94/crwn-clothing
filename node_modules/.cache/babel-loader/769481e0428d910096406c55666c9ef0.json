{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBiWIGB0DS1BDX0oikyuOFPOkG2GRGy1rU\",\n  authDomain: \"crwn-db-7ae1b.firebaseapp.com\",\n  projectId: \"crwn-db-7ae1b\",\n  storageBucket: \"crwn-db-7ae1b.appspot.com\",\n  messagingSenderId: \"844764429030\",\n  appId: \"1:844764429030:web:e5d5179d7b60676b139927\",\n  measurementId: \"G-S2QKX21JY1\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/edgarpatino/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,SAAS,EAAE,eAHA;AAIXC,EAAAA,aAAa,EAAE,2BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACdJ,QAAAA,WADc;AACDC,QAAAA,KADC;AACMC,QAAAA,SADN;AACkB,WAAGZ;AADrB,OAAZ,CAAN;AAGH,KAJD,CAIC,OAAMe,KAAN,EAAa;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACH;AAEJ;AAEJ,CAtBM;AAwBP3B,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAIA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAGP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config = {\n    apiKey: \"AIzaSyBiWIGB0DS1BDX0oikyuOFPOkG2GRGy1rU\",\n    authDomain: \"crwn-db-7ae1b.firebaseapp.com\",\n    projectId: \"crwn-db-7ae1b\",\n    storageBucket: \"crwn-db-7ae1b.appspot.com\",\n    messagingSenderId: \"844764429030\",\n    appId: \"1:844764429030:web:e5d5179d7b60676b139927\",\n    measurementId: \"G-S2QKX21JY1\"\n};\n\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n    console.log(snapShot)\n\n    if(!snapShot.exists){\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName, email, createdAt , ...additionalData\n            })\n        }catch(error) {\n            console.log('error creating user', error.message);\n        }\n\n    }\n\n}\n\nfirebase.initializeApp(config);\n\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport default firebase;\n\n"]},"metadata":{},"sourceType":"module"}